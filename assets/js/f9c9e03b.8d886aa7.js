"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[5320],{1628:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>h,frontMatter:()=>s,metadata:()=>l,toc:()=>d});var t=r(4848),i=r(8453);const s={},a="Image Generator App",l={id:"image generator/intro",title:"Image Generator App",description:"This is a simple Flask-based web application that uses OpenAI's DALL\xb7E model to generate images from text prompts. The app generates three images for each prompt provided by the user.",source:"@site/docs/image generator/intro.md",sourceDirName:"image generator",slug:"/image generator/intro",permalink:"/Generative-AI/docs/image generator/intro",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/image generator/intro.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Image Generator",permalink:"/Generative-AI/docs/category/image-generator"}},o={},d=[{value:"Features",id:"features",level:2},{value:"Getting Started",id:"getting-started",level:2},{value:"Prerequisites",id:"prerequisites",level:3},{value:"Installation",id:"installation",level:3},{value:"How to Use",id:"how-to-use",level:2},{value:"File Structure",id:"file-structure",level:2},{value:"API Details",id:"api-details",level:2},{value:"Example",id:"example",level:2},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Enjoy creating AI-generated art with the Image Generator App!",id:"enjoy-creating-ai-generated-art-with-the-image-generator-app",level:3}];function c(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"image-generator-app",children:"Image Generator App"})}),"\n",(0,t.jsx)(n.p,{children:"This is a simple Flask-based web application that uses OpenAI's DALL\xb7E model to generate images from text prompts. The app generates three images for each prompt provided by the user."}),"\n",(0,t.jsx)(n.h2,{id:"features",children:"Features"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Generative AI"}),": Uses OpenAI's DALL\xb7E model to create images based on user input."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Flask Application"}),": The web server is built using Flask and runs on port ",(0,t.jsx)(n.code,{children:"8080"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Multiple Results"}),": For every prompt, the app returns three unique image results."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"getting-started",children:"Getting Started"}),"\n",(0,t.jsx)(n.h3,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,t.jsx)(n.p,{children:"Before you start, make sure you have the following installed on your system:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Python 3.8 or higher"}),"\n",(0,t.jsx)(n.li,{children:"OpenAI API key"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"installation",children:"Installation"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Clone the repository"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"git clone https://github.com/your-username/Generative-AI.git\ncd Image-Generator\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Install the dependencies"}),":"]}),"\n",(0,t.jsx)(n.p,{children:"Create a virtual environment (optional but recommended):"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"python3 -m venv venv\nsource venv/bin/activate  # On Windows: venv\\Scripts\\activate\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Install the required dependencies using ",(0,t.jsx)(n.code,{children:"pip"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"pip install -r requirements.txt\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Set up environment variables"}),":"]}),"\n",(0,t.jsxs)(n.p,{children:["Create a ",(0,t.jsx)(n.code,{children:".env"})," file in the root of your project and add your OpenAI API key:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"OPENAI_API_KEY=your_openai_api_key\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Start the Flask application"}),":"]}),"\n",(0,t.jsx)(n.p,{children:"To run the app, use the following command:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"python3 main.py\n"})}),"\n",(0,t.jsxs)(n.p,{children:["The app will start and run on port ",(0,t.jsx)(n.code,{children:"8080"})," by default."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Access the app"}),":"]}),"\n",(0,t.jsx)(n.p,{children:"Open your browser and go to:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"http://localhost:8080\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Run the bot using Docker"}),":"]}),"\n",(0,t.jsx)(n.p,{children:"Start the bot using Docker."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"docker run -d \\\n --name image-generator \\\n -e NAME=image-generator \\\n -e OPENAI_API_KEY=your_openai_api_key \\\n deepak93p/image-generator:latest\n"})}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"how-to-use",children:"How to Use"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"After navigating to the app in your browser, you will see a text box where you can enter a prompt."}),"\n",(0,t.jsx)(n.li,{children:'Enter a descriptive prompt (e.g., "a futuristic city in the clouds at sunset").'}),"\n",(0,t.jsx)(n.li,{children:"The app will generate three images based on the prompt using OpenAI's DALL\xb7E model."}),"\n",(0,t.jsx)(n.li,{children:"View or download the generated images from the results page."}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"file-structure",children:"File Structure"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"Image-Generator/\n.\n\u251c\u2500\u2500 Dockerfile                   # Dockerfile for building the image\n\u251c\u2500\u2500 Makefile                     # Commands related to the application\n\u251c\u2500\u2500 README.md                    # Application description\n\u251c\u2500\u2500 SETUP.md                     # Instructions for setting up the app\n\u251c\u2500\u2500 __init__.py               \n\u251c\u2500\u2500 __main.py__.py   \n\u251c\u2500\u2500 docker-compose.yml           # Docker Compose file\n\u251c\u2500\u2500 main.py                      # Flask application entry point\n\u251c\u2500\u2500 requirements.txt             # Dependencies\n\u251c\u2500\u2500 setup.py                     # Setup script\n\u251c\u2500\u2500 src                          # Source code\n\u2502         \u251c\u2500\u2500 __init__.py\n\u2502         \u2514\u2500\u2500 app                # Application code\n\u2502             \u251c\u2500\u2500 __init__.py\n\u2502             \u251c\u2500\u2500 routes.py      # Routes for the application\n\u2502             \u2514\u2500\u2500 utils.py       # Utility functions\n\u2514\u2500\u2500 templates                    # HTML templates\n    \u2514\u2500\u2500 index.html               # Index HTML template   \n\n"})}),"\n",(0,t.jsx)(n.h2,{id:"api-details",children:"API Details"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Endpoint"}),": ",(0,t.jsx)(n.code,{children:"/generate"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Method"}),": POST"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Input"}),": A prompt provided by the user in the form of text."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Output"}),": Three generated images returned to the user."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,t.jsxs)(n.p,{children:["If you enter the prompt ",(0,t.jsx)(n.code,{children:'"a peaceful forest with a waterfall"'}),", the app will return three AI-generated images depicting various interpretations of the scene."]}),"\n",(0,t.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Make sure your OpenAI API key is valid and has sufficient quota to generate images."}),"\n",(0,t.jsx)(n.li,{children:"If the app doesn't start, check that Flask and required dependencies are installed properly."}),"\n",(0,t.jsx)(n.li,{children:"If the app doesn't generate images, check that the OpenAI API key is valid and has sufficient quota."}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"enjoy-creating-ai-generated-art-with-the-image-generator-app",children:"Enjoy creating AI-generated art with the Image Generator App!"})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}}}]);